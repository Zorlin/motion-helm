{{- $sizeConfig := include "motion.getSizeConfig" . | fromYaml }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.global.customer.name }}-{{ .Values.product }}
  namespace: customer-{{ .Values.global.customer.name }}
  annotations:
    argocd.argoproj.io/sync-wave: "15"
  labels:
    app: {{ .Values.global.customer.name }}-{{ .Values.product }}
spec:
  serviceName: {{ .Values.global.customer.name }}-{{ .Values.product }}
  podManagementPolicy: "Parallel"
  selector:
    matchLabels:
      app: {{ .Values.global.customer.name }}-{{ .Values.product }}
  template:
    metadata:
      labels:
        app: {{ .Values.global.customer.name }}-{{ .Values.product }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: init-storage
        image: busybox
        command: ["sh", "-c", "mkdir -p /storage/motion ; chown -R 1337:1337 /storage/"]
        securityContext:
          runAsUser: 0
          runAsGroup: 0
        volumeMounts:
        - name: storage
          mountPath: /storage
      containers:
      - name: {{ .Values.product }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        workingDir: /storage
        command:
          - "motion"
          {{- if .Values.global.products.singularity }}
          - "--experimentalSingularityStore"
          - "--experimentalRemoteSingularityAPIUrl=http://singularity-api:9090"
          - "--experimentalSingularityContentURLTemplate=${SINGULARITY_CONTENT_PROVIDER_DOMAIN:-http://singularity-content-provider:7778}/piece/{PIECE_CID}"
          {{- end }}
          {{- if (index .Values.global.products (index .Values.product)).customFlags }}
          {{- range $key, $value := (index .Values.global.products (index .Values.product)).customFlags }}
          - "--{{ $key }}={{ $value }}"
          {{- end }}
          {{- end }}
        envFrom:
          - configMapRef:
              name: {{ .Values.global.customer.name }}-{{ .Values.product }}-config
        env:
          LOTUS_TEST: []
          LOTUS_API: []
          LOTUS_TOKEN: []
          MOTION_STORAGE_PROVIDERS: []
          MOTION_PRICE_PER_GIB_EPOCH: []
          MOTION_PRICE_PER_GIB: []
          MOTION_PRICE_PER_DEAL: []
          MOTION_DEAL_START_DELAY: []
          MOTION_DEAL_DURATION: []
          MOTION_SINGULARITY_MAX_CAR_SIZE: []
          MOTION_SINGULARITY_PACK_THRESHOLD: []
          MOTION_SINGULARITY_SCHEDULE_CRON: []
          MOTION_SINGULARITY_SCHEDULE_DEAL_NUMBER: []
          MOTION_WALLET_KEY: []
          MOTION_VERIFIED_DEAL: []
        ports:
          - name: motion-http
            containerPort: 40080
            protocol: TCP
        # readinessProbe:
        #  httpGet:
        #    path: /health/ping
        #    port: motion-http
        resources:
          limits:
            cpu: "{{ $sizeConfig.cpuLimit }}"
            memory: "{{ $sizeConfig.memoryLimit }}"
          requests:
            cpu: "{{ $sizeConfig.cpuRequest }}"
            memory: "{{ $sizeConfig.memoryRequest }}"
        volumeMounts:
          - name: storage
            mountPath: /storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          {{- if not .Values.global.products.singularity }}
          claimName: {{ .Values.global.customer.name }}-{{ .Values.product }}-storage
          {{- else }}
          claimName: {{ .Values.global.customer.name }}-singularity-storage
          {{- end }}